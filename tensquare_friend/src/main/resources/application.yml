server:
  port: 10001

spring:
  application:
    name: tensquare-friend

  datasource:
    # 数据源配置
    druid:
      driverClassName: com.mysql.jdbc.Driver
      url: jdbc:mysql://rm-bp133858g2361qh0fso.mysql.rds.aliyuncs.com:3306/tensquare_friend?useUnicode=true&amp;characterEncoding=UTF8&useSSL=false
      username: ENC(x+RLfp0IqGlHHMuU5k/c6Q==)
      password: ENC(9N0j84xejjkUxmfM+MiaYB0sEfMZWDqY)
      # 初始化时建立物理连接的个数
      initialSize: 5
      # 连接池最小连接数
      minIdle: 5
      # 连接池最大连接数
      maxActive: 1000
      # 获取连接时最大等待时间，单位毫秒
      maxWait: 60000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      testWhileIdle: true
      # 既作为检测的间隔时间又作为testWhileIdel执行的依据
      timeBetweenEvictionRunsMillis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
      minEvictableIdleTimeMillis: 300000
      # 用来检测连接是否有效的sql 必须是一个查询语句,mysql中为 select 'x', oracle中为 select 1 from dual
      validationQuery: SELECT 'x'
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      testOnBorrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      testOnReturn: false
      # 是否缓存preparedStatement,mysql5.5+建议开启
      poolPreparedStatements: true
      # 配置扩展插件,配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙#
      filters: stat,wall,slf4j
      # 当值大于0时poolPreparedStatements会自动修改为true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  jpa:
    database: MySQL
    show-sql: true


jasypt:
  encryptor:
    password: ${TENSQUARE_HOME}

jwt:
  config:
    ttl: 1800000
    key: ${TENSQUARE_HOME}


eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka
  instance:
    # 模块间跨IP访问
    prefer-ip-address: true
    # 服务提供方配置
    # 服务刷新时间配置，每隔这个时间会主动心跳一次 默认 30s
    lease-renewal-interval-in-seconds: 5
    # 服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
    # 注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，默认90s
    # 这个配置一般为服务刷新时间配置的三倍
    lease-expiration-duration-in-seconds: 15